// Generated by CoffeeScript 1.10.0
(function() {
  var Channel, TemporaryChannel, debug,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  debug = require('./config').debug('amqp:TemporaryChannel');

  Channel = require('./Channel');

  TemporaryChannel = (function(superClass) {
    extend(TemporaryChannel, superClass);

    function TemporaryChannel(connection, channel, cb) {
      this._channelOpen = bind(this._channelOpen, this);
      TemporaryChannel.__super__.constructor.call(this, connection, channel);
      this.cb = cb;
      this.temporaryChannel();
      return this;
    }

    TemporaryChannel.prototype._channelOpen = function() {
      if (this.cb != null) {
        this.cb(null, this);
      }
      return this.cb = null;
    };

    TemporaryChannel.prototype._channelClosed = function() {};

    TemporaryChannel.prototype._onMethod = function() {};

    return TemporaryChannel;

  })(Channel);

  module.exports = TemporaryChannel;

}).call(this);
